function decimal (number){
	
	// declaring global variables
	
    var dn = [];
	var dd = [];
	var df = [];
	var finalNumber;
	
	// getting the decimal part
	
	let deciNumber = number % 1;
	
	// convert decimal part into string
	
	 deciNumber = deciNumber.toString();
	
	// find the length of the string (decimal part)

    let lendeciNumber = deciNumber.length - 2;
	
	// new numerator in multiples of 10
	
	let n = number * (10 ** lendeciNumber);
	
	// new denominator in multiples of 10
	
	let d = 10 ** lendeciNumber;
	
	// finding the greatest common multiple between 2 & 100 of number & denominator
	
	function divi (n,d){
	
	//declaring arrays
	
	var dn = [];
	var dd = [];
	var df = [];
	
	//finding divisors of numerator between 2 & 100
	
	for (i=2; i<101; i++) {
	
	if (Number.isInteger(n / i)){
		
	dn.push(i);	
		
	}
	
 }
	//finding divisors of denominator between 2 & 100
	
	for (i=2; i<101; i++) {
	
	if (Number.isInteger(d / i)){
		
	dd.push(i);	
		
	}
	
 }   //finding common divisors of denominator
	
	for (i=0; i<dn.length; i++){
	
	for (j=0; j<dd.length; j++){
		
	x = dn[i];
	y = dd[j];
	
	if (x == y){
	 df.push(x);
	}
	}
	
 }
	
	
 }

	
	
}

function divi(n, d) {

    //declaring arrays

    var dn = [];
    var dd = [];
    var df = [];

    //finding divisors of numerator between 2 & 100

    for (i = 2; i < 101; i++) {

        if (Number.isInteger(n / i)) {

            dn.push(i);

        }

    }
    //finding divisors of denominator between 2 & 100

    for (i = 2; i < 101; i++) {

        if (Number.isInteger(d / i)) {

            dd.push(i);

        }

    } //finding common divisors of denominator

    for (i = 0; i < dn.length; i++) {

        for (j = 0; j < dd.length; j++) {

            x = dn[i];
            y = dd[j];

            if (x == y) {
                df.push(x);
            }
        }

    }

  var finalNumber = Math.max(...df);
  return finalNumber;
}





